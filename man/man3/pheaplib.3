.\" WARNING! THIS FILE WAS GENERATED AUTOMATICALLY BY c2man!
.\" DO NOT EDIT! CHANGES MADE TO THIS FILE WILL BE LOST!
.TH "pheap" 3 "24 January 2018" "c2man pheap.h"
.SH "NAME"
msm_init,
msm_extend,
msm_heap_attach,
msm_heap_detach,
msm_sbrk,
msm_hstat,
msm_find_object,
msm_map_objectname2addr,
msm_map_objectname2index,
msm_map_objectindex2name,
msm_map_objectindex2addr,
msm_mapname_unique,
msm_show_mapped_objects,
msm_show_mapped_object,
msm_hdes2name,
msm_name2hdes,
msm_fdes2hdes,
map_setinfo,
map_setsize,
msm_isync_heaptables,
msm_sync_heaptables,
msm_print_heaptables,
msm_exit,
msm_set_autodestruct_state,
msm_phobject_exists,
msm_map_address_mode,
msm_name2index,
msm_addr_in_heap,
msm_map_paddr_to_haddr,
msm_map_paddr_to_haddr,
map_addr2index,
msm_save_heapstate \- Header file for persistent heap library. A persistent heap is an
.SH "SYNOPSIS"
.ft B
#include <pheap.h>
.sp
extern int msm_init(int);
.sp
extern int msm_extend
.br
(
.br
	int,
.br
	int
.br
);
.sp
extern int msm_heap_attach
.br
(
.br
	char *,
.br
	int
.br
);
.sp
extern int msm_heap_detach
.br
(
.br
	int,
.br
	int
.br
);
.sp
extern void *msm_sbrk
.br
(
.br
	int,
.br
	unsigned long int
.br
);
.sp
extern int msm_hstat
.br
(
.br
	int,
.br
	heap_type *
.br
);
.sp
extern int msm_find_object
.br
(
.br
	int,
.br
	void *
.br
);
.sp
void *msm_map_objectname2addr
.br
(
.br
	int,
.br
	char *
.br
);
.sp
extern int msm_map_objectname2index
.br
(
.br
	int,
.br
	char *
.br
);
.sp
extern char *msm_map_objectindex2name
.br
(
.br
	int,
.br
	int
.br
);
.sp
extern void *msm_map_objectindex2addr
.br
(
.br
	int,
.br
	int
.br
);
.sp
extern int msm_mapname_unique
.br
(
.br
	int,
.br
	char *
.br
);
.sp
extern int msm_show_mapped_objects
.br
(
.br
	int,
.br
	FILE *
.br
);
.sp
extern int msm_show_mapped_object
.br
(
.br
	int,
.br
	int,
.br
	FILE *
.br
);
.sp
extern char *msm_hdes2name(int);
.sp
extern int msm_name2hdes(char *);
.sp
extern int msm_fdes2hdes(int);
.sp
extern int map_setinfo
.br
(
.br
	int,
.br
	int,
.br
	char *
.br
);
.sp
extern int map_setsize
.br
(
.br
	int,
.br
	int,
.br
	unsigned long int
.br
);
.sp
extern int msm_isync_heaptables(int);
.sp
extern int msm_sync_heaptables(int);
.sp
extern int msm_print_heaptables
.br
(
.br
	FILE *,
.br
	int,
.br
	char *,
.br
	unsigned long int
.br
);
.sp
extern void msm_exit(int);
.sp
extern int msm_set_autodestruct_state
.br
(
.br
	int,
.br
	int
.br
);
.sp
extern int msm_phobject_exists
.br
(
.br
	int,
.br
	char *
.br
);
.sp
extern int msm_map_address_mode
.br
(
.br
	int,
.br
	int
.br
);
.sp
extern int msm_name2index(char *);
.sp
extern int msm_addr_in_heap
.br
(
.br
	int,
.br
	void *
.br
);
.sp
extern void *msm_map_paddr_to_haddr
.br
(
.br
	int,
.br
	void *
.br
);
.sp
extern void *msm_map_paddr_to_haddr
.br
(
.br
	int,
.br
	void *
.br
);
.sp
extern int map_addr2index
.br
(
.br
	int,
.br
	void *
.br
);
.sp
extern int msm_save_heapstate(char *);
.ft R
.SH "PARAMETERS"
.TP
.B "int"
Not Documented.
.TP
.B "char *"
Not Documented.
.TP
.B "unsigned long int"
Not Documented.
.TP
.B "heap_type *"
Not Documented.
.TP
.B "void *"
Not Documented.
.TP
.B "FILE *"
Not Documented.
.SH "DESCRIPTION"
.SS "msm_init"
Initialise persistent heap.
.SS "msm_extend"
Extend [grow] persistent heap table.
.SS "msm_heap_attach"
Attach a persistent heap to process returning its heap descriptor.
.SS "msm_heap_detach"
Detach a persistent heap.
.SS "msm_sbrk"
Extend the memory within a persistent heap.
.SS "msm_hstat"
Gather statistics on heap.
.SS "msm_find_object"
Find object in persistent object map.
.SS "msm_map_objectname2addr"
Translate persistent object name to address.
.SS "msm_map_objectname2index"
Translate persistent object name to index.
.SS "msm_map_objectindex2name"
Translate persistent object map index to name.
.SS "msm_map_objectindex2addr"
Translate persistent object map index to address .
.SS "msm_mapname_unique"
Is this mapname unique?.
.SS "msm_show_mapped_objects"
Show persistent heap object table.
.SS "msm_show_mapped_object"
Show detailsd of object in shared heap.
.SS "msm_hdes2name"
Translate persistent heap descriptor to name.
.SS "msm_name2hdes"
Translate persistent heap name to heap descriptor.
.SS "msm_fdes2hdes"
Translate persistent heap fdes (file descriptor) to heap descriptor.
.SS "map_setinfo"
Set info field of mapped object.
.SS "map_setsize"
Set the size field of mapped object.
.SS "msm_isync_heaptables"
Inverse synchronisation of heap table.
.SS "msm_sync_heaptables"
Synchronisation of heap table.
.SS "msm_print_heaptables"
Print heaptable (debugging).
.SS "msm_exit"
Detach all persistent heaps.
.SS "msm_set_autodestruct_state"
Mark a persistent heap for "autodestruct-on-detach".
.SS "msm_phobject_exists"
See if a persistent object exists.
.SS "msm_map_address_mode"
Set shared heap addressing to local (PHM_MAP_LOCAL)
or relative (PHM_MAP_REMOTE).
.SS "msm_name2index"
Translate heap name to heap table index.
.SS "msm_addr_in_heap"
Check if address is in heap.
.SS "msm_map_paddr_to_haddr"
Convert global heap address to local process address.
.SS "msm_map_paddr_to_haddr"
Convert local process address to global heap address.
.SS "map_addr2index"
Map a (shared) address to object table index.
.SS "msm_save_heapstate"
Save state of heap.
