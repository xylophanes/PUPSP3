#!/bin/bash
#
#--------------------------------------------------------------------
# Makefile generator script. M.A. O'Neill, Tumbling Dice, 2000-2024
#
# $1 is a configuration string of the form <OS>.<PUPS type>
#
# $2 is the name of the input Makefile from which the actual Makefile
#    is generated
#
# if $3 is set to debug build Makefile which will generate code which
# can be debugged using gdb
#--------------------------------------------------------------------
#------------
# Abort build
#------------

function abort() {

	echo ""
	echo "*** Interrupted"
	echo ""

	\rmdir BUILDLOCK 2> /dev/null
	exit 255 
}


#-------------
# Trap signals
#-------------

trap abort SIGQUIT SIGINT



#------------------------
# Main script entry point
#------------------------

if [[ $# < 2 ]] || [[ $# > 3 ]] ||  [ "$1" = "usage" ] || [ "$1" = "help" ] ] ; then
	if [ "$3" != "debug" ] ; then
	        echo ""
	        echo "    PUPSP3 (SUPUPS) Make template configuration tool (C) M.A. O'Neill, Tumbling Dice, 2002-2024"
        	echo ""
		echo "    Usage: configure <PUPS architecture type> <PUPS Makefile (.in)> [debug]"
		echo ""
		exit 0
	fi
fi

echo ""
echo "    PUPSP3 (SUPUPS) Make template configuration tool (C) M.A. O'Neill, Tumbling Dice 2000-2024"
echo ""

if [ ! -e $2 ] ;  then
	echo "configure: cannot find Makefile [$2]"
	echo ""
	exit 255 
fi

ret=$(file $2 | grep make)
if [ "$ret" = "" ] ; then
	echo "    configure ERROR: [$2] is not a makefile"
	echo ""
	exit 255 
fi


#------------------------------------------------------
# Check that configuration files exist for architecture
#------------------------------------------------------
#-----
# Root
#-----

if [ $(whoami) = root ] ; then
	projectDir=/p3
	includeDir=/usr/include/p3


#-----
# User
#-----

else

	#--------------------
	# Local pups/p3 build
	#--------------------
	#----
	# Yes
	#----
	if [ -e $HOME/p3 ] ; then
		projectDir=$HOME/p3
		includeDir=$HOME/include/p3


	#---
	# No
	#---

	else
		projectDir=/p3
		includeDir=/usr/include/p3
	fi
fi

export PUPS_CONFDIR=$projectDir 
PATH=$PATH:..:`pwd`
arch=$(echo $MACHTYPE)
arch=$(upcase $arch)
target=$(echo $OSTYPE)
target=$(downcase $target)
targarch=$arch.$target.$1

if [ ! -e $projectDir/$targarch ] ; then
	echo "    configure ERROR: Cannot find configuration file ($targarch)"
	exit 255 
fi


#-------------------------
# Check buildlock is clear
#-------------------------

sed s/\$ARCH/$arch/g < $projectDir/$targarch > /tmp/$targarch
if [ -e BUILDLOCK ] ; then
        ret=$(ask "buildlock exists  -- delete?")

        if [ "$ret" = "y" ] || [ "$ret" = "yes" ] ; then
                echo "buildlock removed"
                \rmdir BUILDLOCK
        elif [ "$ret" = "quit" ] || [ "$ret" = "bye" ] ; then
                exit 255 
        else
                tas BUILDLOCK
        fi
fi
tas BUILDLOCK



#------------------------------------------------
# Tell user what is needed in profile/rc file for
# binary to run
#------------------------------------------------

echo ""
echo "    ------------------------------------------------------------------------------------------"
echo "    Make sure your .tcshrc script has the following lines in it:"
echo ""


#--------------------
# Root PUPS/P3 install
#---------------------

if [ $projectDir = /p3 ] ; then
	echo "    setenv P3_CONFDIR /p3"


	#--------------
	# 64 bit system
	#--------------

	if [ "$(pupsuname | grep x86_64)" != "" ] ; then
		echo "    setenv LD_LIBRARY_PATH /usr/lib64 (should be set by default)"


	#--------------
	# 32 bit system
	#--------------

	else
		echo "    setenv LD_LIBRARY_PATH /usr/lib (should be set by default)"
	fi


#-----
# User 
#-----

else
	echo "    setenv P3_CONFDIR $HOME/p3"


	#--------------
	# 64 bit system
	#--------------

	if [ "$(pupsuname | grep x86_64)" != "" ] ; then
		echo "    setenv LD_LIBRARY_PATH $HOME/lib64"


	#--------------
	# 32 bit system
	#--------------

	else
		echo "    setenv LD_LIBRARY_PATH $HOME/lib"
	fi
fi

echo ""
echo "    and your bash PROFILE has the following lines in it:"
echo ""

#------
# Root
#------

if [ $projectDir = /p3  ] ; then
	echo "    export P3_CONFDIR=/p3"


	#--------------
	# 64 bit system
	#--------------

	if [ "$(pupsuname | grep x86_64)" != "" ] ; then
		echo "    export LD_LIBRARY_PATH=/usr/lib64 (should be set by default)"


	#--------------
	# 32 bit system
	#--------------

	else
		echo "    export LD_LIBRARY_PATH=/usr/lib (should be set by default)"
	fi


#------
# User 
#------

else
	echo "    export P3_CONFDIR=$HOME/p3"


	#--------------
	# 64 bit system 
	#--------------

	if [ "$(pupsuname | grep x86_64)" != "" ] ; then
		echo "    export LD_LIBRARY_PATH=$HOME/lib64"


	#--------------
	# 32 bit system 
	#--------------

	else
		echo "    export LD_LIBRARY_PATH=$HOME/lib"
	fi
fi

echo "    ------------------------------------------------------------------------------------------"
echo ""


#----------------
# Build Makefile
#----------------

pupsconf $targarch $2 Makefile	2> /dev/null
\rm /tmp/$targarch		2> /dev/null

#-------------------------------
# Generate debuggable binaries
#-------------------------------

if [ "$4" == debug ] ; then
        sed s/OPTIMISE/"-g"/g <Makefile >$$

	echo ""
	echo "    ----------------------------------------------------------------------------------------------"
	echo "    You have specified debug. This means that your code (but not the underlying PUPS/P3 library"
	echo "    code can be interactively debugged (using gdb). If you want to build debuggable PUPS/P3"
	echo "    libraries you need to specify debuggable PUPS/P3 libraries when they are built (this is an"
	echo "    option to the build_pups_services.csh script) and set debug_install to TRUE before it is run"
	echo "    ----------------------------------------------------------------------------------------------"
	echo ""

else
        sed s/OPTIMISE/"-O3"/g <Makefile >$$
fi

\mv $$ Makefile	2> /dev/null

\rmdir BUILDLOCK 2> /dev/null
exit 0
